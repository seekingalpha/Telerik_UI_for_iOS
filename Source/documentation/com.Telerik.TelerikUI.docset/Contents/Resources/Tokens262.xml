<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/TKStroke.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/TKStroke</TokenIdentifier>
			<Abstract type="html">Represents a stroke that renders a line.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
            
			
			<NodeRef refid="262"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TKStroke/strokeWithColor:</TokenIdentifier>
			<Abstract type="html">Defines the stroke with a solid color.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>+ (instancetype)strokeWithColor:(UIColor *)color</Declaration>
			<Parameters>
				<Parameter>
					<Name>color</Name>
					<Abstract type="html">The solid color.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/strokeWithColor:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TKStroke/strokeWithColor:width:</TokenIdentifier>
			<Abstract type="html">Defines the stroke with a solid color and thickness.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>+ (instancetype)strokeWithColor:(UIColor *)color width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>color</Name>
					<Abstract type="html">The solid color.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The stroke&apos;s thickness.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/strokeWithColor:width:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TKStroke/strokeWithColor:width:cornerRadius:</TokenIdentifier>
			<Abstract type="html">Defines the stroke with a solid color, thickness and corner radius.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>+ (instancetype)strokeWithColor:(UIColor *)color width:(CGFloat)width cornerRadius:(CGFloat)cornerRadius</Declaration>
			<Parameters>
				<Parameter>
					<Name>color</Name>
					<Abstract type="html">The solid color.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The stroke&apos;s tickness.</Abstract>
				</Parameter><Parameter>
					<Name>cornerRadius</Name>
					<Abstract type="html">The corner radius in points.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/strokeWithColor:width:cornerRadius:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TKStroke/strokeWithFill:</TokenIdentifier>
			<Abstract type="html">Defines the stroke with a fill.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>+ (instancetype)strokeWithFill:(TKFill *)fill</Declaration>
			<Parameters>
				<Parameter>
					<Name>fill</Name>
					<Abstract type="html">The fill used for the stroke.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/strokeWithFill:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TKStroke/strokeWithFill:width:</TokenIdentifier>
			<Abstract type="html">Defines the stroke with a fill and thickness.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>+ (instancetype)strokeWithFill:(TKFill *)fill width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>fill</Name>
					<Abstract type="html">The fill used for the stroke.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The stroke&apos;s thickness.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/strokeWithFill:width:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TKStroke/strokeWithFill:width:cornerRadius:</TokenIdentifier>
			<Abstract type="html">Defines the stroke with a fill, thickness and corder radius.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>+ (instancetype)strokeWithFill:(TKFill *)fill width:(CGFloat)width cornerRadius:(CGFloat)cornerRadius</Declaration>
			<Parameters>
				<Parameter>
					<Name>fill</Name>
					<Abstract type="html">The fill used for the stroke.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The stroke&apos;s thickness.</Abstract>
				</Parameter><Parameter>
					<Name>cornerRadius</Name>
					<Abstract type="html">The corner radius in points.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/strokeWithFill:width:cornerRadius:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setWidth:</TokenIdentifier>
			<Abstract type="html">The stroke&apos;s width.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/width</TokenIdentifier>
			<Abstract type="html">The stroke&apos;s width.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/width</TokenIdentifier>
			<Abstract type="html">The stroke&apos;s width.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setLineCap:</TokenIdentifier>
			<Abstract type="html">Line cap style.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGLineCap lineCap</Declaration>
			
			
			<Anchor>//api/name/lineCap</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/lineCap</TokenIdentifier>
			<Abstract type="html">Line cap style.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGLineCap lineCap</Declaration>
			
			
			<Anchor>//api/name/lineCap</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/lineCap</TokenIdentifier>
			<Abstract type="html">Line cap style.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGLineCap lineCap</Declaration>
			
			
			<Anchor>//api/name/lineCap</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setLineJoin:</TokenIdentifier>
			<Abstract type="html">Line join style.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGLineJoin lineJoin</Declaration>
			
			
			<Anchor>//api/name/lineJoin</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/lineJoin</TokenIdentifier>
			<Abstract type="html">Line join style.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGLineJoin lineJoin</Declaration>
			
			
			<Anchor>//api/name/lineJoin</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/lineJoin</TokenIdentifier>
			<Abstract type="html">Line join style.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGLineJoin lineJoin</Declaration>
			
			
			<Anchor>//api/name/lineJoin</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setMiterLimit:</TokenIdentifier>
			<Abstract type="html">Line miter limit.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat miterLimit</Declaration>
			
			
			<Anchor>//api/name/miterLimit</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/miterLimit</TokenIdentifier>
			<Abstract type="html">Line miter limit.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat miterLimit</Declaration>
			
			
			<Anchor>//api/name/miterLimit</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/miterLimit</TokenIdentifier>
			<Abstract type="html">Line miter limit.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat miterLimit</Declaration>
			
			
			<Anchor>//api/name/miterLimit</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setPhase:</TokenIdentifier>
			<Abstract type="html">A value that specifies how far into the dash pattern the line starts, in units of the user space. For example,
passing a value of 3 means the line is drawn with the dash pattern starting at three units from its beginning.
Passing a value of 0 draws a line starting at the beginning of the dash pattern.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat phase</Declaration>
			
			
			<Anchor>//api/name/phase</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/phase</TokenIdentifier>
			<Abstract type="html">A value that specifies how far into the dash pattern the line starts, in units of the user space. For example,
passing a value of 3 means the line is drawn with the dash pattern starting at three units from its beginning.
Passing a value of 0 draws a line starting at the beginning of the dash pattern.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat phase</Declaration>
			
			
			<Anchor>//api/name/phase</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/phase</TokenIdentifier>
			<Abstract type="html">A value that specifies how far into the dash pattern the line starts, in units of the user space. For example,
passing a value of 3 means the line is drawn with the dash pattern starting at three units from its beginning.
Passing a value of 0 draws a line starting at the beginning of the dash pattern.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat phase</Declaration>
			
			
			<Anchor>//api/name/phase</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setCorners:</TokenIdentifier>
			<Abstract type="html">A bitmask value that identifies the corners that you want rounded. You can use this parameter to round only a
subset of the corners of the rectangle. The default is all corners. Ignored if cornerRadius is 0.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIRectCorner corners</Declaration>
			
			
			<Anchor>//api/name/corners</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/corners</TokenIdentifier>
			<Abstract type="html">A bitmask value that identifies the corners that you want rounded. You can use this parameter to round only a
subset of the corners of the rectangle. The default is all corners. Ignored if cornerRadius is 0.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIRectCorner corners</Declaration>
			
			
			<Anchor>//api/name/corners</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/corners</TokenIdentifier>
			<Abstract type="html">A bitmask value that identifies the corners that you want rounded. You can use this parameter to round only a
subset of the corners of the rectangle. The default is all corners. Ignored if cornerRadius is 0.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIRectCorner corners</Declaration>
			
			
			<Anchor>//api/name/corners</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setCornerRadius:</TokenIdentifier>
			<Abstract type="html">The radius to use when drawing rounded corners. The Default is 0.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat cornerRadius</Declaration>
			
			
			<Anchor>//api/name/cornerRadius</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/cornerRadius</TokenIdentifier>
			<Abstract type="html">The radius to use when drawing rounded corners. The Default is 0.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat cornerRadius</Declaration>
			
			
			<Anchor>//api/name/cornerRadius</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/cornerRadius</TokenIdentifier>
			<Abstract type="html">The radius to use when drawing rounded corners. The Default is 0.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGFloat cornerRadius</Declaration>
			
			
			<Anchor>//api/name/cornerRadius</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setInsets:</TokenIdentifier>
			<Abstract type="html">Edge insets to apply. This property has no effect when using drawInContext:withPath: method.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIEdgeInsets insets</Declaration>
			
			
			<Anchor>//api/name/insets</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/insets</TokenIdentifier>
			<Abstract type="html">Edge insets to apply. This property has no effect when using drawInContext:withPath: method.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIEdgeInsets insets</Declaration>
			
			
			<Anchor>//api/name/insets</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/insets</TokenIdentifier>
			<Abstract type="html">Edge insets to apply. This property has no effect when using drawInContext:withPath: method.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIEdgeInsets insets</Declaration>
			
			
			<Anchor>//api/name/insets</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setAllowsAntialiasing:</TokenIdentifier>
			<Abstract type="html">Determines whether to use antialiasing when drawing the stroke</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL allowsAntialiasing</Declaration>
			
			
			<Anchor>//api/name/allowsAntialiasing</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/allowsAntialiasing</TokenIdentifier>
			<Abstract type="html">Determines whether to use antialiasing when drawing the stroke</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL allowsAntialiasing</Declaration>
			
			
			<Anchor>//api/name/allowsAntialiasing</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/allowsAntialiasing</TokenIdentifier>
			<Abstract type="html">Determines whether to use antialiasing when drawing the stroke</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL allowsAntialiasing</Declaration>
			
			
			<Anchor>//api/name/allowsAntialiasing</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setStrokeSides:</TokenIdentifier>
			<Abstract type="html">The sides of the stroke to draw. The default is all sides.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) TKRectSide strokeSides</Declaration>
			
			
			<Anchor>//api/name/strokeSides</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/strokeSides</TokenIdentifier>
			<Abstract type="html">The sides of the stroke to draw. The default is all sides.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) TKRectSide strokeSides</Declaration>
			
			
			<Anchor>//api/name/strokeSides</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/strokeSides</TokenIdentifier>
			<Abstract type="html">The sides of the stroke to draw. The default is all sides.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) TKRectSide strokeSides</Declaration>
			
			
			<Anchor>//api/name/strokeSides</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setDashPattern:</TokenIdentifier>
			<Abstract type="html">The dash patterns of the stroke. An array of NSNumber that specify the lengths of the painted segments and
unpainted segments, respectively, of the dash pattern, or nil for no dash pattern.
For example, passing an array with values [@2, @3] sets a dash pattern that alternates between
a 2-user-space-unit-long painted segment and a 3-user-space-unit-long unpainted segment.
Passing values [@1, @3, @4, @2] sets the pattern to a 1-unit painted segment, a 3-unit unpainted segment,
a 4-unit painted segment, and a 2-unit unpainted segment.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *dashPattern</Declaration>
			
			
			<Anchor>//api/name/dashPattern</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/dashPattern</TokenIdentifier>
			<Abstract type="html">The dash patterns of the stroke. An array of NSNumber that specify the lengths of the painted segments and
unpainted segments, respectively, of the dash pattern, or nil for no dash pattern.
For example, passing an array with values [@2, @3] sets a dash pattern that alternates between
a 2-user-space-unit-long painted segment and a 3-user-space-unit-long unpainted segment.
Passing values [@1, @3, @4, @2] sets the pattern to a 1-unit painted segment, a 3-unit unpainted segment,
a 4-unit painted segment, and a 2-unit unpainted segment.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *dashPattern</Declaration>
			
			
			<Anchor>//api/name/dashPattern</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/dashPattern</TokenIdentifier>
			<Abstract type="html">The dash patterns of the stroke. An array of NSNumber that specify the lengths of the painted segments and
unpainted segments, respectively, of the dash pattern, or nil for no dash pattern.
For example, passing an array with values [@2, @3] sets a dash pattern that alternates between
a 2-user-space-unit-long painted segment and a 3-user-space-unit-long unpainted segment.
Passing values [@1, @3, @4, @2] sets the pattern to a 1-unit painted segment, a 3-unit unpainted segment,
a 4-unit painted segment, and a 2-unit unpainted segment.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray *dashPattern</Declaration>
			
			
			<Anchor>//api/name/dashPattern</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/setFill:</TokenIdentifier>
			<Abstract type="html">The stroke&apos;s brush.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) TKFill *fill</Declaration>
			
			
			<Anchor>//api/name/fill</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/fill</TokenIdentifier>
			<Abstract type="html">The stroke&apos;s brush.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) TKFill *fill</Declaration>
			
			
			<Anchor>//api/name/fill</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TKStroke/fill</TokenIdentifier>
			<Abstract type="html">The stroke&apos;s brush.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) TKFill *fill</Declaration>
			
			
			<Anchor>//api/name/fill</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/color</TokenIdentifier>
			<Abstract type="html">The stroke color.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>- (UIColor *)color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/initWithColor:</TokenIdentifier>
			<Abstract type="html">Defines the stroke with a solid color.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>- (id)initWithColor:(UIColor *)color</Declaration>
			<Parameters>
				<Parameter>
					<Name>color</Name>
					<Abstract type="html">The solid color.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithColor:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/initWithColor:width:</TokenIdentifier>
			<Abstract type="html">Defines the stroke with a solid color and thickness.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>- (id)initWithColor:(UIColor *)color width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>color</Name>
					<Abstract type="html">The solid color</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The stroke&apos;s thickness.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithColor:width:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/initWithFill:</TokenIdentifier>
			<Abstract type="html">Initializes the stroke with a fill.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>- (id)initWithFill:(TKFill *)fill</Declaration>
			<Parameters>
				<Parameter>
					<Name>fill</Name>
					<Abstract type="html">The fill used for the stroke.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithFill:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TKStroke/initWithFill:width:</TokenIdentifier>
			<Abstract type="html">Initializes the stroke with a fill and thickness.</Abstract>
			<DeclaredIn>TKStroke.h</DeclaredIn>
			
			<Declaration>- (id)initWithFill:(TKFill *)fill width:(CGFloat)width</Declaration>
			<Parameters>
				<Parameter>
					<Name>fill</Name>
					<Abstract type="html">The fill used for the stroke.</Abstract>
				</Parameter><Parameter>
					<Name>width</Name>
					<Abstract type="html">The stroke&apos;s thickness.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithFill:width:</Anchor>
            <NodeRef refid="262"/>
		</Token>
		
        
        
	</File>
</Tokens>