<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/TKFeedbackDataSource.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/TKFeedbackDataSource</TokenIdentifier>
			<Abstract type="html">The data source protocol used to provide feedback service and storage.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
            
			
			<NodeRef refid="279"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/setUserName:</TokenIdentifier>
			<Abstract type="html">Contains the user name.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userName</Declaration>
			
			
			<Anchor>//api/name/userName</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/userName</TokenIdentifier>
			<Abstract type="html">Contains the user name.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userName</Declaration>
			
			
			<Anchor>//api/name/userName</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/TKFeedbackDataSource/userName</TokenIdentifier>
			<Abstract type="html">Contains the user name.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userName</Declaration>
			
			
			<Anchor>//api/name/userName</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/feedbackItems:</TokenIdentifier>
			<Abstract type="html">Returns async the feedback items from the data source provider.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)feedbackItems:(void ( ^ ) ( NSArray *items , NSError *error ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the get operation is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/feedbackItems:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/addFeedback:completionHandler:</TokenIdentifier>
			<Abstract type="html">Adds async the feedback item to the data source provider.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)addFeedback:(TKFeedbackItem *)item completionHandler:(void ( ^ ) ( NSError *error ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The feedback item</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the add operation is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addFeedback:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/addFeedbackItems:completionHandler:</TokenIdentifier>
			<Abstract type="html">Adds async the specified feedback items to the data source provider.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)addFeedbackItems:(NSArray *)feedbackItems completionHandler:(void ( ^ ) ( NSError *))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>feedbackItems</Name>
					<Abstract type="html">The feedback item list</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the add operation is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addFeedbackItems:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/editWithKey:state:completionHandler:</TokenIdentifier>
			<Abstract type="html">Edits async the feedback item in the data source provider.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)editWithKey:(NSString *)key state:(NSString *)state completionHandler:(void ( ^ ) ( NSError *error ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">The feedback item key</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The feedback item state</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the edit operation is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/editWithKey:state:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/deleteWithKey:completionHandler:</TokenIdentifier>
			<Abstract type="html">Deletes async the feedback item from the data source provider.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)deleteWithKey:(NSString *)key completionHandler:(void ( ^ ) ( NSError *error ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">The feedback item key</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the delete operation is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteWithKey:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/setUserEmail:</TokenIdentifier>
			<Abstract type="html">Contains the user email.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userEmail</Declaration>
			
			
			<Anchor>//api/name/userEmail</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/userEmail</TokenIdentifier>
			<Abstract type="html">Contains the user email.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userEmail</Declaration>
			
			
			<Anchor>//api/name/userEmail</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/TKFeedbackDataSource/userEmail</TokenIdentifier>
			<Abstract type="html">Contains the user email.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userEmail</Declaration>
			
			
			<Anchor>//api/name/userEmail</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/feedbackItemsByState:completionHandler:</TokenIdentifier>
			<Abstract type="html">Returns async the feedback items filtered by state.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)feedbackItemsByState:(NSString *)state completionHandler:(void ( ^ ) ( NSArray *items , NSError *error ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The feedback item state used to filter data</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the get operation is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/feedbackItemsByState:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/feedbackItemsByState:skip:completionHandler:</TokenIdentifier>
			<Abstract type="html">Returns async the feedback items filtered by state and skip number of items.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)feedbackItemsByState:(NSString *)state skip:(NSInteger)skip completionHandler:(void ( ^ ) ( NSArray *, NSError *))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">The feedback item state used to filter data</Abstract>
				</Parameter><Parameter>
					<Name>skip</Name>
					<Abstract type="html">The number of skipped items</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the get operation is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/feedbackItemsByState:skip:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/imageForKey:completionHandler:</TokenIdentifier>
			<Abstract type="html">Returns screenshot image of the feedback item using key.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)imageForKey:(NSString *)key completionHandler:(void ( ^ ) ( UIImage *image , NSError *error ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">The feedback item key</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the image download is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/imageForKey:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/subItemsForKey:completionHandler:</TokenIdentifier>
			<Abstract type="html">Returns async the comment feedback items using a key of item from the data source provider.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)subItemsForKey:(NSString *)key completionHandler:(void ( ^ ) ( NSArray *items , NSError *error ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">The parent feedback item key</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the get operation for comments is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/subItemsForKey:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/TKFeedbackDataSource/addSubItemForKey:subItem:completionHandler:</TokenIdentifier>
			<Abstract type="html">Adds async the comment feedback item using a key of item to the data source provider.</Abstract>
			<DeclaredIn>TKFeedbackDataSource.h</DeclaredIn>
			
			<Declaration>- (void)addSubItemForKey:(NSString *)key subItem:(TKFeedbackItem *)item completionHandler:(void ( ^ ) ( NSError *error ))handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">The parent feedback item key</Abstract>
				</Parameter><Parameter>
					<Name>item</Name>
					<Abstract type="html">The comment feedback item</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The completion handler to call when the add operation for comment is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addSubItemForKey:subItem:completionHandler:</Anchor>
            <NodeRef refid="279"/>
		</Token>
		
        
        
	</File>
</Tokens>